name: Test Caching

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          #- { name: "windows (msvc)", os: windows-latest, cc: "cl", cxx: "cl", ccache_variant: sccache }
          - { name: "windows (clang, ccache)", os: windows-latest, cc: "clang", cxx: "clang++", ccache_variant: ccache }
          - { name: "windows (clang, sccache)", os: windows-latest, cc: "clang", cxx: "clang++", ccache_variant: sccache }
          # - { name: "ubuntu (gcc, ccache)", os: ubuntu-latest, cc: "gcc", cxx: "g++-12", ccache_variant: ccache }
          # - { name: "ubuntu (gcc, sccache)", os: ubuntu-latest, cc: "gcc", cxx: "g++-12", ccache_variant: sccache }
          # - { name: "ubuntu (clang, ccache)", os: ubuntu-latest, cc: "clang", cxx: "clang++", ccache_variant: ccache }
          # - { name: "ubuntu (clang, sccache)", os: ubuntu-latest, cc: "clang", cxx: "clang++", ccache_variant: sccache }
          # - { name: "macos (clang, ccache)", os: macos-latest, cc: "clang", cxx: "$(brew --prefix llvm@15)/bin/clang++", ccache_variant: ccache }
          # - { name: "macos (clang, sccache)", os: macos-latest, cc: "clang", cxx: "$(brew --prefix llvm@15)/bin/clang++", ccache_variant: sccache }
          # - { name: "macos (gcc, ccache)", os: macos-latest, cc: "gcc", cxx: "g++", ccache_variant: ccache }
          # - { name: "macos (gcc, sccache)", os: macos-latest, cc: "gcc", cxx: "g++", ccache_variant: sccache }

    name: ${{ matrix.config.name }}
    # Reference:
    # https://github.com/mozilla/sccache/blob/main/docs/GHA.md
    env:
        SCCACHE_GHA_ENABLED: "on"
        #CCACHE_DIR: ${{ github.workspace }}/cache/ccache
        #SCCACHE_DIR: ${{ github.workspace }}/cache/sccache

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update Ccache (Windows)
        if: runner.os == 'Windows' && matrix.config.ccache_variant == 'ccache'
        run: choco upgrade ccache

      - name: sccache
        if: matrix.config.ccache_variant == 'sccache'
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Enable Developer Command Prompt (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Ccache
        if: matrix.config.ccache_variant == 'ccache'
        uses: hendrikmuhs/ccache-action@v1.2.8
        with:
          key: ${{ github.job }}-${{ matrix.os }} # Eg. "some_build-ubuntu-latest"
          variant: ${{ matrix.config.ccache_variant }}

      # - name: Install CMake and Ninja
      #   uses: lukka/get-cmake@latest

      # - name: print ccache and ninja
      #   if: 
      #   #shell: bash
      #   run: |
      #     sccache --version
      #     echo "=============="
      #     ninja --version

      - name: Config
        if: ${{ !matrix.config.ccache_variant }}
        run: >-
          cmake -B build
          -G Ninja
          -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
      
      - name: Config (w/caching)
        if: matrix.config.ccache_variant
        run: >-
          cmake -B build
          -G Ninja
          -D CMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.config.ccache_variant }}
          -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build ./build --config Release
