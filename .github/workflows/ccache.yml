name: ccache

on: [workflow_dispatch]
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

jobs:
  build:
    strategy:
        fail-fast: false
        matrix:
          os: [ ubuntu-latest, macos-latest ]
          variant: [ ccache ]
          include:
          - os: windows-latest
            variant: sccache

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - uses: lukka/get-cmake@latest

    # - name: Set up CMake
    #   uses: cmake/setup-cmake@v1
    #   with:
    #     cmakeListsTxtPath: 'CMakeLists.txt'
    #     buildDir: 'build'
    #     installDir: 'install'
    #     cmakeArgs: '-DCMAKE_BUILD_TYPE=Release'

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ github.job }}-${{ matrix.os }}  # Eg. "some_build-ubuntu-latest"
        variant: ${{ matrix.variant }}

    # - name: Setup (Windows)
    #   if: runner.os == 'Windows'
    #   run: |
    #     SET 
    #     export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

    - name: Setup (non-Windows)
      if: runner.os != 'Windows'
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

    - name: Config
      run: cmake -B build -D CMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.variant }}

    - name: Build
      run: cmake --build build --config Release

    # - name: Clang-Tidy
    #   run: |
    #     cd build
    #     cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    #     clang-tidy -p .
