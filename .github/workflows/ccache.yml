name: ccache

on: [ workflow_dispatch ]
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

jobs:
  build:
    env:
      build_dir: build

    strategy:
        fail-fast: false
        matrix:
          os: [ ubuntu-latest, macos-latest, windows-latest ]
          build_type: [ Release]
          ccache_variant: [ ccache ]
          include:
          - os: windows-latest
            ccache_variant: ccache

    runs-on: ${{ matrix.os }}

    name: build (${{ matrix.os }} - ${{ matrix.build_type }})

    steps:
    - uses: actions/checkout@v3

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.build_type }}  # Eg. "some_build-ubuntu-latest"
        variant: ${{ matrix.ccache_variant }}

    - name: Config
      run: >-
        cmake -B ${{ env.build_dir }}
        -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -D CMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.ccache_variant }}

    - name: Build
      run: cmake --build ${{ env.build_dir }} --config ${{ matrix.build_type }}

    # - name: Clang-Tidy
    #   run: |
    #     cd build
    #     cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    #     clang-tidy -p .

    # - name: Setup (Windows)
    #   if: runner.os == 'Windows'
    #   run: |
    #     SET 
    #     export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

    # - name: Setup (non-Windows)
    #   if: runner.os != 'Windows'
    #   run: |
    #     export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

    #- uses: lukka/get-cmake@latest

    # - name: Set up CMake
    #   uses: cmake/setup-cmake@v1
    #   with:
    #     cmakeListsTxtPath: 'CMakeLists.txt'
    #     buildDir: 'build'
    #     installDir: 'install'
    #     cmakeArgs: '-DCMAKE_BUILD_TYPE=Release'