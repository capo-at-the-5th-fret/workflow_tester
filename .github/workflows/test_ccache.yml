name: Test Ccache

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl", cxx: "cl", ccache_variant: sccache }
          #- { name: "Windows clang", os: windows-latest, cc: "clang", cxx: "clang++", ccache_variant: sccache }
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++", ccache_variant: ccache }
          #- { name: "Ubuntu clang", os: ubuntu-latest, cc: "clang", cxx: "clang++", ccache_variant: ccache }
          - { name: "MacOS clang", os: macos-latest, cc: "clang", cxx: "clang++", ccache_variant: ccache }
          #- { name: "MacOS gcc", os: macos-latest, cc: "gcc", cxx: "g++", ccache_variant: ccache }

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ccache
        uses: hendrikmuhs/ccache-action@v1.2.9
        with:
          key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.build_type }}  # Eg. "some_build-ubuntu-latest"
          variant: ${{ matrix.config.ccache_variant }}

      - name: Enable Developer Command Prompt (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Config
        run: >-
          cmake -G Ninja -B build
          -D CMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.config.ccache_variant }}
          -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build ./build --config Release
