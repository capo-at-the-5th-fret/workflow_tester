name: Test sccache On Windows

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "windows (msvc)", os: windows-latest, cc: "cl", cxx: "cl", ccache_variant: sccache }
          #- { name: "windows (clang)", os: windows-latest, cc: "clang", cxx: "clang++", ccache_variant: sccache }
          #- { name: "ubuntu (gcc)", os: ubuntu-latest, cc: "gcc", cxx: "g++-12", ccache_variant: ccache }
          #- { name: "ubuntu (clang)", os: ubuntu-latest, cc: "clang", cxx: "clang++", ccache_variant: ccache }
          #- { name: "macos (clang)", os: macos-latest, cc: "clang", cxx: "$(brew --prefix llvm@15)/bin/clang++" } #, ccache_variant: ccache }
          #- { name: "macos (gcc)", os: macos-latest, cc: "gcc", cxx: "g++", ccache_variant: ccache }

    name: ${{ matrix.config.name }}
    env:
        SCCACHE_GHA_ENABLED: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      # - name: Ccache
      #   if: matrix.config.ccache_variant
      #   uses: hendrikmuhs/ccache-action@v1.2.8
      #   with:
      #     key: ${{ github.job }}-${{ matrix.os }} # Eg. "some_build-ubuntu-latest"
      #     variant: ${{ matrix.config.ccache_variant }}

      - name: Enable Developer Command Prompt (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Config
        if: ${{ !matrix.config.ccache_variant }}
        run: >-
          cmake -G Ninja -B build
          -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
      
      - name: Config (Ccache)
        if: matrix.config.ccache_variant
        run: >-
          cmake -G Ninja -B build
          -D CMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.config.ccache_variant }}
          -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build ./build --config Release
